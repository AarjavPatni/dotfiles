# Boilerplate for Competitive Programming
snippet bpcp
#include <iostream>
#include <vector>
#include <map>
#include <stack>
#include <queue>
#include <set>
#include <algorithm>
#include <cassert>
#include <cmath>
using namespace std;

typedef long int li;
typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define REP(i, a, b) for (int i = a; i < b; i++)

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    int cases = 0;
    cin >> cases;

    for (int case_index = 0; case_index < cases; case_index++) {
        ${0}
    }
}
endsnippet

# Boilerplate
snippet bp
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main() {
    ${1}
    return 0;
}
endsnippet

# Print to Console
snippet cout
cout << "${1}" << endl;
endsnippet

# For Loop
snippet for
for (int i = 0; i < ${1}; ++i) {
    // Your code here
}
endsnippet

# While Loop
snippet while
while (${1}) {
    // Your code here
}
endsnippet

# If Statement
snippet if
if (${1}) {
    // Your code here
}
endsnippet

# Function
snippet function
${1:functionName}(${2}) {
    // Your code here
}
endsnippet
